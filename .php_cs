<?php

$rules = [
    '@PSR2'                           => true,
    'align_multiline_comment'         => true,
    'array_indentation'               => true,
    'array_syntax'                    => ['syntax' => 'short'],
    'binary_operator_spaces'          => ['operators' => ['>>' => 'align', '=>' => 'align_single_space'], 'default' => 'single_space'],
    'blank_line_after_namespace'      => true,
    'blank_line_after_opening_tag'    => true,
    'blank_line_before_statement'     => ['statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try']],
    'braces'                          => ['allow_single_line_closure' => false, 'position_after_anonymous_constructs' => 'same', 'position_after_control_structures' => 'same', 'position_after_functions_and_oop_constructs' => 'next'],
    'cast_spaces'                     => ['space' => 'single'],
    'class_attributes_separation'     => ['elements' => ['const', 'method', 'property']],
    'class_definition'                => ['multiLineExtendsEachSingleLine' => false, 'singleItemSingleLine' => false, 'singleLine' => false],
    'combine_consecutive_issets'      => true,
    'combine_consecutive_unsets'      => true,
    'compact_nullable_typehint'       => true,
    'concat_space'                    => ['spacing' => 'one'],
    'declare_equal_normalize'         => ['space' => 'single'],
    'doctrine_annotation_indentation' => [
        'ignored_tags' => [
            'abstract',
            'access',
            'code',
            'deprec',
            'encode',
            'exception',
            'final',
            'ingroup',
            'inheritdoc',
            'inheritDoc',
            'magic',
            'name',
            'toc',
            'tutorial',
            'private',
            'static',
            'staticvar',
            'staticVar',
            'throw',
            'api',
            'author',
            'category',
            'copyright',
            'deprecated',
            'example',
            'filesource',
            'global',
            'ignore',
            'internal',
            'license',
            'link',
            'method',
            'package',
            'param',
            'property',
            'property-read',
            'property-write',
            'return',
            'see',
            'since',
            'source',
            'subpackage',
            'throws',
            'todo',
            'TODO',
            'usedBy',
            'uses',
            'var',
            'version',
            'after',
            'afterClass',
            'backupGlobals',
            'backupStaticAttributes',
            'before',
            'beforeClass',
            'codeCoverageIgnore',
            'codeCoverageIgnoreStart',
            'codeCoverageIgnoreEnd',
            'covers',
            'coversDefaultClass',
            'coversNothing',
            'dataProvider',
            'depends',
            'expectedException',
            'expectedExceptionCode',
            'expectedExceptionMessage',
            'expectedExceptionMessageRegExp',
            'group',
            'large',
            'medium',
            'preserveGlobalState',
            'requires',
            'runTestsInSeparateProcesses',
            'runInSeparateProcess',
            'small',
            'test',
            'testdox',
            'ticket',
            'uses',
            'SuppressWarnings',
            'noinspection',
            'package_version',
            'enduml',
            'startuml',
            'fix',
            'FIXME',
            'fixme',
            'override',
        ],
        'indent_mixed_lines' => false,
    ],
    'elseif'                                           => true,
    'encoding'                                         => true,
    'escape_implicit_backslashes'                      => ['double_quoted'  => true, 'heredoc_syntax' => true, 'single_quoted'  => false],
    'explicit_indirect_variable'                       => true,
    'explicit_string_variable'                         => true,
    'full_opening_tag'                                 => true,
    'fully_qualified_strict_types'                     => true,
    'function_declaration'                             => ['closure_function_spacing' => 'one'],
    'function_typehint_space'                          => true,
    'global_namespace_import'                          => ['import_classes' => true, 'import_constants' => null, 'import_functions' => null],
    'heredoc_indentation'                              => true,
    'heredoc_to_nowdoc'                                => true,
    'include'                                          => true,
    'indentation_type'                                 => true,
    'line_ending'                                      => true,
    'linebreak_after_opening_tag'                      => true,
    'lowercase_cast'                                   => true,
    'lowercase_keywords'                               => true,
    'magic_constant_casing'                            => true,
    'magic_method_casing'                              => true,
    'method_chaining_indentation'                      => true,
    'method_argument_space'                            => ['ensure_fully_multiline' => false, 'keep_multiple_spaces_after_comma' => false],
    'multiline_comment_opening_closing'                => true,
    'multiline_whitespace_before_semicolons'           => ['strategy' => 'no_multi_line'],
    'native_function_casing'                           => true,
    'native_function_type_declaration_casing'          => true,
    'new_with_braces'                                  => true,
    'no_blank_lines_after_class_opening'               => true,
    'no_blank_lines_after_phpdoc'                      => true,
    'no_closing_tag'                                   => true,
    'no_empty_comment'                                 => true,
    'no_empty_phpdoc'                                  => true,
    'no_empty_statement'                               => true,
    'no_extra_blank_lines'                             => ['tokens' => ['extra'], ],
    'no_leading_import_slash'                          => true,
    'no_leading_namespace_whitespace'                  => true,
    'no_mixed_echo_print'                              => ['use' => 'echo'],
    'no_multiline_whitespace_around_double_arrow'      => true,
    'no_singleline_whitespace_before_semicolons'       => true,
    'no_spaces_after_function_name'                    => true,
    'no_spaces_around_offset'                          => ['positions' => ['inside'], ],
    'no_spaces_inside_parenthesis'                     => true,
    'no_trailing_comma_in_list_call'                   => true,
    'no_trailing_comma_in_singleline_array'            => false,
    'no_trailing_whitespace'                           => true,
    'no_trailing_whitespace_in_comment'                => true,
    'no_unneeded_control_parentheses'                  => ['statements' => ['break', 'clone', 'continue', 'echo_print', 'return', 'switch_case', 'yield']],
    'no_unneeded_curly_braces'                         => true,
    'no_useless_else'                                  => true,
    'no_unused_imports'                                => true,
    'no_useless_return'                                => true,
    'no_whitespace_before_comma_in_array'              => true,
    'no_whitespace_in_blank_line'                      => true,
    'normalize_index_brace'                            => true,
    'not_operator_with_successor_space'                => true,
    'nullable_type_declaration_for_default_null_value' => true,
    'object_operator_without_whitespace'               => true,
    'ordered_class_elements'                           => ['order' => ['use_trait', 'constant_public', 'constant_protected', 'constant_private', 'property_public', 'property_protected', 'property_private', 'construct', 'destruct', 'magic', 'phpunit', 'method_public', 'method_protected', 'method_private'], 'sortAlgorithm' => 'none'],
    'ordered_imports'                                  => ['importsOrder' => null, 'sortAlgorithm' => 'length'],
    'phpdoc_add_missing_param_annotation'              => true,
    'phpdoc_align'                                     => ['tags' => ['param', 'return', 'throws', 'type', 'var']],
    'phpdoc_indent'                                    => true,
    'phpdoc_inline_tag'                                => true,
    'phpdoc_no_useless_inheritdoc'                     => true,
    'phpdoc_order'                                     => true,
    'phpdoc_return_self_reference'                     => ['replacements' => ['this' => '$this', '@this' => '$this', '$self' => 'self', '@self' => 'self', '$static' => 'static', '@static' => 'static']],
    'phpdoc_scalar'                                    => true,
    'phpdoc_single_line_var_spacing'                   => true,
    'phpdoc_summary'                                   => true,
    'phpdoc_to_comment'                                => true,
    'phpdoc_trim'                                      => true,
    'phpdoc_trim_consecutive_blank_line_separation'    => true,
    'phpdoc_types'                                     => true,
    'phpdoc_var_without_name'                          => true,
    'return_type_declaration'                          => true,
    'short_scalar_cast'                                => true,
    'simple_to_complex_string_variable'                => true,
    'simplified_null_return'                           => true,
    'single_blank_line_at_eof'                         => true,
    'single_blank_line_before_namespace'               => true,
    'single_class_element_per_statement'               => ['elements' => ['const',  'property', ], ],
    'single_import_per_statement'                      => true,
    'single_line_after_imports'                        => true,
    'single_line_comment_style'                        => ['comment_types' => ['asterisk', 'hash', ], ],
    'single_quote'                                     => ['strings_containing_single_quote_chars' => false],
    'space_after_semicolon'                            => ['remove_in_empty_for_expressions' => false, ],
    'standardize_not_equals'                           => true,
    'switch_case_semicolon_to_colon'                   => true,
    'switch_case_space'                                => true,
    'ternary_operator_spaces'                          => true,
    'ternary_to_null_coalescing'                       => true,
    'trailing_comma_in_multiline_array'                => true,
    'trim_array_spaces'                                => true,
    'unary_operator_spaces'                            => true,
    'visibility_required'                              => ['elements' => ['property', 'method']],
    'whitespace_after_comma_in_array'                  => true,
];

$excludes = [
    '.git',
    '.idea',
    'bootstrap/cache',
    'bower_components',
    'node_modules',
    'storage',
    'vendor',
];

$finder = PhpCsFixer\Finder::create()
    ->in(__DIR__)
    ->exclude($excludes)
    ->name('*.php')
    ->ignoreDotFiles(true)
    ->ignoreVCS(true)
    ->notName('README.md')
    ->notName('*.xml')
    ->notName('*.yml')
    ->notName('*.blade.php')
    ->notName('.phpstorm.meta.php')
    ->notName('_ide_helper.php');

return PhpCsFixer\Config::create()
    ->setRiskyAllowed(true)
    ->setRules($rules)
    ->setFinder($finder);
